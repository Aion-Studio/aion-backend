# Name of your application. Used to uniquely configure containers.
service: aion-rising

# Name of the container image.
image: marko911/aionserverr

# Deploy to these servers.
servers:
  - 65.108.52.102
  

# Credentials for your image host.
registry:
  # Specify the registry server, if you're not using Docker Hub
  # server: registry.digitalocean.com / ghcr.io / ...
  username: marko911
  password:
    - DOCKER_HUB_TOKEN

# Inject ENV variables into containers (secrets come from .env).
# Remember to run `kamal env push` after making changes!
env:
 secret:
   - APPLICATION__HOST
   - APPLICATION__PORT
   - DATABASE__URL
   - DATABASE__NAME
   - DATABASE__PARAMS
   - REDIS_URI
   - PRISMA__DATABASE__URL

builder:
  multiarch: false
  cache:
    type: registry
# Use a different ssh user than root
# ssh:
#   user: app

# Configure builder setup.
# builder:
#   args:
#     RUBY_VERSION: 3.2.0
#   secrets:
#     - GITHUB_TOKEN
#   remote:
#     arch: amd64
#     host: ssh://app@192.168.0.1

# Use accessory services (secrets come from .env).
# accessories:
#   db:
#     image: postgres:14
#     host: 192.168.0.2
#     port: 5432
#     env:
#       clear:
#         POSTGRES_ROOT_HOST: '%'
#       secret:
#         - POSTGRES_ROOT_PASS
#     files:
#       - config/mysql/production.cnf:/etc/mysql/my.cnf
#       - db/production.sql:/docker-entrypoint-initdb.d/setup.sql
#     directories:
#       - data:/var/lib/mysql
#   redis:
#     image: redis:7.0
#     host: 192.168.0.2
#     port: 6379
#     directories:
#       - data:/data

# Configure custom arguments for Traefik
traefik:
  host_port: 8080
  # labels:
  #   traefik.http.routers.aion-rising-web.rule: Host(`api.aionrising.com`)
  #   traefik.http.routers.aion-rising-web.entrypoints: web
  #   traefik.http.middlewares.aion-rising-web-https-redirect.redirectscheme.scheme: https
  #   traefik.http.routers.aion-rising-web.middlewares: aion-rising-web-https-redirect




#   args:
#     accesslog: true
#     accesslog.format: json

# Configure a custom healthcheck (default is /up on port 3000)
healthcheck:
  max_attempts: 10
#   path: /healthz
#   port: 4000

# Bridge fingerprinted assets, like JS and CSS, between versions to avoid
# hitting 404 on in-flight requests. Combines all files from new and old
# version inside the asset_path.
# asset_path: /rails/public/assets

# Configure rolling deploys by setting a wait time between batches of restarts.
# boot:
#   limit: 10 # Can also specify as a percentage of total hosts, such as "25%"
#   wait: 2
